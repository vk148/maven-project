pipeline {
    agent any
	parameters{
		string(name:'tomcat_dev', defaultValue:'localhost1', description:'This is dev server')
		string(name:'tomcat_prod', defaultValue:'localhost1', description:'This is dev server')		
	}
	triggers{
		pollSCM('0,30 * * * *');
	}
tools {
    maven 'localmaven'
  }    
stages{
		stage('Init'){
            steps {
				echo 'Initialized'
            }
            post {
                success {
                    echo 'Success'
                }
            }
        }
        stage('Build'){
            steps {
				echo 'Building'
				bat 'mvn clean compile package'
			}
			post{
				success {
						echo 'Now Archiving...'
						archiveArtifacts artifacts: '**/target/*.war'
				}
			}
        }
		stage('Static Analysis'){
            steps {
				echo 'Static Analysis'
				bat 'mvn checkstyle:checkstyle'
            }
            post {
                success {
                    echo 'Static Analysis completed'
                }
            }
        }
		stage('Test'){
            steps {
				echo 'Testing'
				bat 'mvn test'
            }
            post {
                success {
                    echo 'Test completed'
                }
            }
        }
		stage('SonarQube Analysis'){
			agent{
				label 'master'
			}
            steps {
				script{
					scannerHome = tool 'SonarQubeScanner3.2'
				}
				withSonarQubeEnv('SonarQube'){
					bat "${scannerHome}/bin/sonar-scanner.bat"
				}
            }
            post {
                success {
                    echo 'SonarQube Analysis completed'
                }
            }
        }
		stage('Deploy to staging'){
            steps {
				echo 'Deploy to staging'
				build job: 'deploy-to-staging'
            }
            post {
                success {
                    echo 'Deploy to staging completed'
                }
            }
        }
		stage('Deploy to production'){
            steps {
				timeout(time:5, unit:'DAYS'){
					input message: '1st Approval for PRODUCTION deployment', submitter: 'admin'
				}
				timeout(time:5, unit:'DAYS'){
					input message: '2nd Approval for PRODUCTION deployment', submitter: 'vijay'
				}
				build job: 'deploy-to-production'
            }
            post {
                success {
                    echo 'deploy to production completed'
                }
				failure {
					echo ' deployment failed.'
				}
            }
        }
    }
}
